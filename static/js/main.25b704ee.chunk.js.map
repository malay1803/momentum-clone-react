{"version":3,"sources":["component/Time.js","component/PositiveWords.js","component/AddFocus.js","component/Quote.js","component/Weather.js","component/SearchTab.js","App.js","index.js"],"names":["Time","useState","time","setTime","setInterval","currHour","Date","getHours","currMin","getMinutes","slice","showTime","className","React","memo","PositiveWords","phrase","setPhrase","phrases","useEffect","randomPhrase","Math","floor","random","length","getPhase","getFocus","list","localStorage","getItem","console","log","AddFocus","focus","setFocus","setItem","type","value","readOnly","onClick","yourFocus","prompt","Quote","quote","setQuote","author","setAuthor","getQuote","a","axios","get","data","qouteOfTheDay","contents","quotes","authorOfTheQuote","href","Weather","lati","setLat","longi","setLong","city","setCity","temp","setTemp","icon","setIcon","getWeather","name","round","main","weather","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","alert","src","alt","SearchTab","engine","setEngine","onKeyDown","e","key","window","open","target","id","onChange","App","style","backgroundImage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25b704ee.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Time = () => {\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const updateTime = () => {\r\n    let currHour = new Date().getHours();\r\n    // code for making time appear in 12 hour format\r\n    // if (currHour > 12){\r\n    //   currHour = currHour - 12\r\n      if(currHour<10){\r\n        currHour = '0' + currHour\r\n      }\r\n    // }\r\n    let currMin = (\"0\" + new Date().getMinutes()).slice(-2);\r\n    let showTime = `${currHour}:${currMin}`;\r\n    setTime(showTime);\r\n  };\r\n  setInterval(updateTime, 1000);\r\n\r\n  return (\r\n    <div className=\"time\">\r\n      <h1>{time}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Time);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst PositiveWords = () => {\r\n  const [phrase, setPhrase] = useState(\"Accept Yourself\");\r\n\r\n  let phrases = [\r\n    \"Accept Yourself\",\r\n    \"Act Justly\",\r\n    \"Aim High\",\r\n    \"Amplify Hope\",\r\n    \"Take Baby Steps\",\r\n    \"You Are Awesome\",\r\n    \"You Are Creative\",\r\n    \"Be Fearless\",\r\n    \"Be Honest\",\r\n    \"Be Kind\",\r\n    \"Be Spontaneous\",\r\n    \"Be Still\",\r\n    \"You Are Yourself\",\r\n    \"Be A Beautiful Chaos\",\r\n    \"Breathe Deeply\",\r\n    \"But Why?\",\r\n    \"Carpe Diem\",\r\n    \"Cherish Today\",\r\n    \"Just Chill Out\",\r\n    \"You are Crazy Beautiful\",\r\n    \"Dance Today\",\r\n    \"Don’t Panic\",\r\n    \"Don’t Stop\",\r\n    \"Dream Big\",\r\n    \"Dream Bird\",\r\n    \"Enjoy Life\",\r\n    \"Enjoy Today\",\r\n  ];\r\n\r\n  const getPhase = () => {\r\n    let randomPhrase = Math.floor(Math.random() * phrases.length) + 1;\r\n    setPhrase(phrases[randomPhrase])\r\n  };\r\n\r\n  useEffect(()=>{\r\n    getPhase()\r\n  },[])\r\n\r\n  return <h3>{phrase}</h3>;\r\n};\r\n\r\nexport default PositiveWords;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst getFocus = () => {\r\n  let list = localStorage.getItem(\"focus\");\r\n  console.log(list);\r\n  if (list) {\r\n    return localStorage.getItem(\"focus\");\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst AddFocus = () => {\r\n  const [focus, setFocus] = useState(getFocus);\r\n\r\n  const addFocus = () => {\r\n    const yourFocus = prompt(\"What is your main focus for today?\");\r\n    if (yourFocus == null) {\r\n      setFocus(\"\");\r\n    } else {\r\n      setFocus(yourFocus);\r\n    }\r\n  };\r\n\r\n  const remFocus = () =>{\r\n    setFocus(\"\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"focus\", focus);\r\n  }, [focus]);\r\n\r\n  return (\r\n    <>\r\n      <h2>What is your main Focus for Today?</h2>\r\n      <input\r\n        className=\"focus\"\r\n        type=\"text\"\r\n        value={focus}\r\n        readOnly\r\n      />\r\n      <div className=\"buttons\">\r\n        <button className=\"addButton button\" onClick={addFocus}>\r\n          Add(+)\r\n        </button>\r\n        <button className=\"remButton button\" onClick={remFocus}>\r\n          remove(x)\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFocus;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Quote = () => {\r\n  const [quote, setQuote] = useState(\"Quote of the Day\");\r\n  const [author, setAuthor] = useState(\"Author\");\r\n\r\n  const getQuote = async () => {\r\n    try {\r\n      const data = await axios.get(\"https://quotes.rest/qod\");\r\n      const qouteOfTheDay = data.data.contents.quotes[0].quote;\r\n      const authorOfTheQuote = data.data.contents.quotes[0].author;\r\n      setQuote(qouteOfTheDay);\r\n      setAuthor(authorOfTheQuote);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuote();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"quoteDiv\">\r\n      <p className=\"quote\">\"{quote}\"</p>\r\n      <p className=\"author\">\r\n        -{author}{\" \"}\r\n        <a\r\n          className=\"twitterLink\"\r\n          href={`http://twitter.com/intent/tweet?text=%22${quote}%22+-${author}`}\r\n        >\r\n          <i className=\"fab fa-twitter\"></i>\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Weather = () => {\r\n  const [lati, setLat] = useState(\"\");\r\n  const [longi, setLong] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"\");\r\n\r\n  const getCurrentLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          var lat = position.coords.latitude;\r\n          var long = position.coords.longitude;\r\n          setLat(lat);\r\n          setLong(long);\r\n        },\r\n        () => {\r\n          alert(\"Error!\");\r\n        }\r\n      );\r\n    } else {\r\n      alert(\r\n        \"It seems like Geolocation, which is required for this page, is not enabled in your browser. Please use a browser which supports it.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const getWeather = async () => {\r\n    const api = \"f59760c8d4b46f298b7bfaecbe7911f0\";\r\n    try {\r\n      const data = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lati}&lon=${longi}&units=metric&appid=${api}`\r\n      );\r\n      setCity(data.data.name);\r\n      setTemp(Math.round(data.data.main.temp));\r\n      setIcon(data.data.weather[0].icon);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurrentLocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getWeather();\r\n  });\r\n\r\n  return (\r\n    <div className=\"weather\">\r\n      <div className=\"temp\">\r\n        <img src={\"http://openweathermap.org/img/w/\" + icon + \".png\"} alt=\"\" />\r\n        <p>{temp} °C</p>\r\n      </div>\r\n      <div className=\"city\">\r\n        <p>{city}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React, { useState } from \"react\";\r\n\r\nconst SearchTab = () => {\r\n  const [engine, setEngine] = useState(\"google\");\r\n\r\n  const enterKey = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (engine === \"google\") {\r\n        window.open(`https://www.google.com/search?q=${e.target.value}`);\r\n      } else if(engine === \"youtube\") {\r\n        window.open(\r\n          `https://www.youtube.com/results?search_query=${e.target.value}`\r\n        );\r\n      } else{\r\n        window.open(\r\n          `https://stackoverflow.com/search?q=${e.target.value}`\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const searchEngine = (e) => {\r\n    setEngine(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <i className=\"fas fa-search\"></i>\r\n      <input type=\"text\" className=\"search\" onKeyDown={enterKey} />\r\n      <select name=\"searchEngine\" id=\"searchEngine\" onChange={searchEngine}>\r\n        <option value=\"google\">&#xf1a0; Google </option>\r\n        <option value=\"youtube\">&#xf167; Youtube </option>\r\n        <option value=\"stackOverflow\">&#xf16c; &nbsp;StackOverflow </option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchTab;\r\n","import React from \"react\";\nimport Time from \"./component/Time\";\nimport PositiveWords from \"./component/PositiveWords\";\nimport AddFocus from \"./component/AddFocus\";\nimport \"./App.css\";\nimport Quote from \"./component/Quote\";\nimport Weather from \"./component/Weather\";\nimport SearchTab from \"./component/SearchTab\";\n\nfunction App() {\n  return (\n    <div\n      className=\"background\"\n      style={{\n        backgroundImage: `url(https://source.unsplash.com/1920x1280/daily?nature)`,\n      }}\n    >\n      <div className=\"container\">\n        <Time />\n        <PositiveWords />\n        <AddFocus />\n        <Quote />\n        <Weather />\n        <SearchTab />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}